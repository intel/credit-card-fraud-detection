---
title: Fraud detection reference kit #rameter
version: 1.0.0 # Required
description: Fraud detection reference kit
long_description: This blueprint is to learn to boost fraud detection accuracy and developer efficiency through Intel's end-to-end, no-code, graph-neural-networks-boosted and single-node workflows.
# Optional properties for crediting authors
author: "Intel"
author_email: "info@cnvrg.io"

tags:
  - training

# List of tasks (libraries)
tasks:
  - title: data_connector
    description: data_connector
    top: 146
    left: 112
    command: python3 fetch_data.py
    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec
    params:
      - key: input-path
        type: categorical
        values:
          - "https://drive.google.com/drive/folders/1AsTXq6uPPnqKiko2LoFVwYNHzhqa8mi9"
    library: gdrive-connector
    library_version: 1.0.0
    image: python:3.8
    language: python3
    computes:
      - SPR.AIA-SPR-small
  - title: preprocess
    top: 146
    left: 367

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: fd_preprocess
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python start-workflow.py

    requirements:
      cpu: 12
      memory: 24
      gpu: 0
      hpu: 0

    image: docker.io/intel/ai-workflows:pa-fraud-detection-classic-ml
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
    - key: input-path
      type: categorical
      values:
      - "/input/data_connector/fraud_detection/dataset"
    - key: output-path
      type: categorical
      values:
      - "/cnvrg/output"
    - key: config-file
      type: categorical
      values:
      - "/input/data_connector/fraud_detection/preprocess.yaml"

  - title: baseline-training
    top: 146
    left: 641

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: fd_baseline_training
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python start-workflow.py

    requirements:
      cpu: 12
      memory: 24
      gpu: 0
      hpu: 0

    image: docker.io/intel/ai-workflows:pa-fraud-detection-classic-ml
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
    - key: input-path
      type: categorical
      values:
      - "/input/preprocess/output"
    - key: config-file
      type: categorical
      values:
      - "/input/data_connector/fraud_detection/baseline_training.yaml"

  - title: gnn-analytics
    top: 145
    left: 918

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: fd_gnn_analytics
    library_version: 1.0.0
    # The flattened library parameters (in this case we have training library)
    command: bash gnn_analytics.sh

    requirements:
      cpu: 24
      memory: 48
      gpu: 0
      hpu: 0

    image: docker.io/intel/ai-workflows:pa-fraud-detection-gnn
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
    - key: config-path
      type: categorical
      values:
      - "/input/data_connector/fraud_detection"
    - key: input-path
      type: categorical
      values:
      - "/input/preprocess/output"
    - key: output-path
      type: categorical
      values:
      - "/cnvrg/output"

  - title: xgb-training
    top: 146
    left: 1172

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: fd_xgb_training
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python start-workflow.py

    requirements:
      cpu: 24
      memory: 48
      gpu: 0
      hpu: 0

    image: docker.io/intel/ai-workflows:pa-fraud-detection-classic-ml
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
    - key: input-path
      type: categorical
      min: 0
      max: 0
      scale: linear
      steps: 0
      values:
      - "/input/gnn_analytics/output"
    - key: config-file
      type: categorical
      min: 0
      max: 0
      scale: linear
      steps: 0
      values:
      - "/input/data_connector/fraud_detection/xgb_training.yaml"

relations:
- from: preprocess
  to: baseline-training
- from: gnn-analytics
  to: xgb-training
- from: stratified_credit_card_usecase
  to: preprocess
- from: preprocess
  to: gnn-analytics
